Testcase Context example changes $argument1, $argument2, $argument3 {{$option1="changed"; $option2="changed"; $option3="changed"}}
    var $a = "changed"
    let $b = "changed"
    const $c = "changed"
    import $i
    let $i = "changed"
    var $argument1 = "changed"
    var $argument2 = "changed"
    var $argument3 = "changed" // предупреждение, по ссылке передали константу
    var $localVariable = "changed"
    let $globalVariable = "changed"

    assert $option1 == "original"
    assert $option2 == "non original"
    assert $option3 == "changed"

var $a = "original"
var $b = "original"
var $i = "original"
const $c = "original";
var $paramByRef = "original"
var $paramByVal = "original"
const $paramConst = "original"
var $option1 = "original"
var $option2 = "original"
var $option3 = "original"

run Context example changes $paramByRef, {$paramByVal}, $paramConst {{$option2="non " + $option2; $option1=$a; }}

// новая $a была создана в контексте тест-кейса
assert $a == "original"

//  $b не было в контексте тест-кейса, и let обратился к глобальной $b
assert $b == "changed"

// $i was imported from global context
assert $i == "original"

// константы создаются в каждом контексте свои, аналогично var создает переменные
assert $c == "original"

// параметры передавался по ссылке
assert $paramByRef == "changed"

// параметры передавался по значению
assert $paramByVal == "original"

// константа была передана по значению, но измениться не может
assert $paramConst == "original"

// локальная переменна не была создана в глобальном контексте т.к. объявлена var
assert @localVariable == null

// локальная переменна не была создана в глобальном контексте, т.к. объявлена let
assert $globalVariable == "changed"